{
  "version": 3,
  "sources": ["../src/TraverseContext.ts"],
  "sourcesContent": ["import { getDeepValue } from './utils';\n\nexport interface MarkedData<TTypeName> {\n\ttype: TTypeName;\n}\n\nconst jsTypesMatchers = new Map([\n\t['str', (v: any) => typeof v === 'string'],\n\t['num', (v: any) => typeof v === 'number'],\n\t['arr', (v: any) => Array.isArray(v)],\n\t['obj', (v: any) => !Array.isArray(v) && v instanceof Object],\n]);\n\nexport class TraverseContext<TTypeName, TSrc=any> {\n\tsourceObj: TSrc;\n\tpath: Array<string | number> = [];\n\tdata: Record<string, MarkedData<TTypeName>> = {};\n\n\tconstructor (sourceObj: TSrc) {\n\t\tthis.sourceObj = sourceObj;\n\t}\n\n\tprivate log (debug: boolean, ...args: any[]) {\n\t\tif (debug) {\n\t\t\tconst msg = args.map(i => {\n\t\t\t\tif (typeof i === 'object') {\n\t\t\t\t\treturn JSON.stringify(i);\n\t\t\t\t}\n\t\t\t\treturn i.toString();\n\t\t\t}).join('');\n\n\t\t\tconsole.log(msg);\n\t\t}\n\t}\n\n\tprivate getPathBySliceEnd (sliceEnd: number): Array<string | number> {\n\t\treturn this.path.slice(0, sliceEnd);\n\t}\n\n\tprivate getPath (index?: Array<string | number> | number) {\n\t\treturn index === undefined || index === 0\n\t\t\t? this.path\n\t\t\t: index instanceof Array\n\t\t\t? index\n\t\t\t: this.getPathBySliceEnd(index);\n\t}\n\n\tisMatchCustomType(type: TTypeName, pathIndexRev: number, debug = false) {\n\t\tconst data = this.getData(pathIndexRev * -1);\n\t\tthis.log(debug, `isMatchCustomType: data?.type=${data?.type}, type=${type}`);\n\t\treturn data?.type === type;\n\t}\n\n\tisMatchJsType(type: string, pathIndexRev: number, debug = false) {\n\t\tconst matcher = jsTypesMatchers.get(type);\n\t\tif (matcher) {\n\t\t\tconst v = this.getValue(pathIndexRev * -1);\n\t\t\tconst res = matcher(v);\n\t\t\tthis.log(\n\t\t\t\tdebug,\n\t\t\t\t`isMatchJsType: ${type}, pathIndexRev=${pathIndexRev} path=`,\n\t\t\t\tthis.getPath(pathIndexRev * -1).join('.'),\n\t\t\t\t'. v=',\n\t\t\t\ttypeof v === 'string' ? v : '{...}',\n\t\t\t\t`. ${res}`,\n\t\t\t);\n\t\t\treturn res;\n\t\t}\n\t\tthrow new Error(`Unexpected js type: ${type}`);\n\t}\n\n\t/**\n\t *\n\t * @param pattern Example: * ::obj,Resource\n\t * @param pathIndexRev Reversed path index: last = 0, then 1, 2...\n\t */\n\tisMatchPart(pattern: string, pathIndexRev: number, debug = false): boolean {\n\t\tconst [propName, typesStr] = pattern.split(/\\s*::\\s*/);\n\t\tconst types = typesStr ? typesStr.split(/\\s*,\\s*/) : [];\n\t\tconst pathPart = pathIndexRev === 0\n\t\t\t? this.path[this.path.length-1]\n\t\t\t: this.path[this.path.length-1-pathIndexRev];\n\n\t\tthis.log(debug, `isMatchPart: pathPart=${pathPart}, propName=${propName}, types`, types);\n\t\tif (propName !== '' && propName !== '*') {\n\t\t\tif (pathPart !== propName) {\n\t\t\t\tthis.log(debug, 'NOT MATCH');\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn types.every((v, idx) => {\n\t\t\treturn jsTypesMatchers.has(v)\n\t\t\t\t? this.isMatchJsType(v, pathIndexRev, debug)\n\t\t\t\t: this.isMatchCustomType(v as unknown as TTypeName, pathIndexRev, debug);\n\t\t}, this);\n\t}\n\n\t/**\n\t * Match traverse context to pattern.\n\t * Pattern example: \"::Root / resources ::obj / * ::obj,Resource / operations / * ::Operation / params ::arr / * ::obj\".\n\t * Here we have two types of matches (sep by ::):\n\t * 1. property match: either '*' or string.\n\t * 2. type match:\n\t * 2.1. system types: str, num, obj, arr.\n\t * 2.2. state custom type.\n\t * @param pattern Example: \"::Root / resources ::obj / * ::obj,Resource / operations / * ::Operation / params ::arr / * ::obj\"\n\t * @param debug Usage example: const debug = ctx.path.join('.').startsWith('resources.group.operations.createMulti.params.0.options.0');\n\t * @returns\n\t */\n\tisMatch (pattern: string, debug = false): boolean {\n\n\t\tconst parts = pattern.split(/\\s*\\/\\s*/);\n\t\tthis.log(debug, 'parts: ', parts);\n\t\treturn parts.reverse().every((p, i) => this.isMatchPart(p, i, debug), this);\n\t}\n\n\tgetValue (index?: Array<string | number> | number): any {\n\t\tconst path = this.getPath(index);\n\t\treturn getDeepValue(path, this.sourceObj);\n\t}\n\n\tgetData (index?: Array<string | number> | number): MarkedData<TTypeName> | undefined {\n\t\tconst path = this.getPath(index);\n\t\treturn this.data[path.join('.')];\n\t}\n\n\tsetData (path: Array<string | number>, data: MarkedData<TTypeName>) {\n\t\tthis.data[path.join('.')] = data;\n\t}\n}\n"],
  "mappings": "wCAMA,GAAM,GAAkB,GAAI,KAAI,CAC/B,CAAC,MAAO,AAAC,GAAW,MAAO,IAAM,QAAQ,EACzC,CAAC,MAAO,AAAC,GAAW,MAAO,IAAM,QAAQ,EACzC,CAAC,MAAO,AAAC,GAAW,MAAM,QAAQ,CAAC,CAAC,EACpC,CAAC,MAAO,AAAC,GAAW,CAAC,MAAM,QAAQ,CAAC,GAAK,YAAa,OAAM,CAC7D,CAAC,EAEY,EAAN,KAA2C,CAKjD,YAAa,EAAiB,CAH9B,UAA+B,CAAC,EAChC,UAA8C,CAAC,EAG9C,KAAK,UAAY,CAClB,CAEA,AAAQ,IAAK,KAAmB,EAAa,CAC5C,GAAI,EAAO,CACV,GAAM,GAAM,EAAK,IAAI,GAChB,MAAO,IAAM,SACT,KAAK,UAAU,CAAC,EAEjB,EAAE,SAAS,CAClB,EAAE,KAAK,EAAE,EAEV,QAAQ,IAAI,CAAG,CAChB,CACD,CAEA,AAAQ,kBAAmB,EAA0C,CACpE,MAAO,MAAK,KAAK,MAAM,EAAG,CAAQ,CACnC,CAEA,AAAQ,QAAS,EAAyC,CACzD,MAAO,KAAU,QAAa,IAAU,EACrC,KAAK,KACL,YAAiB,OACjB,EACA,KAAK,kBAAkB,CAAK,CAChC,CAEA,kBAAkB,EAAiB,EAAsB,EAAQ,GAAO,CACvE,GAAM,GAAO,KAAK,QAAQ,EAAe,EAAE,EAC3C,YAAK,IAAI,EAAO,iCAAiC,iBAAM,cAAc,GAAM,EACpE,kBAAM,QAAS,CACvB,CAEA,cAAc,EAAc,EAAsB,EAAQ,GAAO,CAChE,GAAM,GAAU,EAAgB,IAAI,CAAI,EACxC,GAAI,EAAS,CACZ,GAAM,GAAI,KAAK,SAAS,EAAe,EAAE,EACnC,EAAM,EAAQ,CAAC,EACrB,YAAK,IACJ,EACA,kBAAkB,mBAAsB,UACxC,KAAK,QAAQ,EAAe,EAAE,EAAE,KAAK,GAAG,EACxC,OACA,MAAO,IAAM,SAAW,EAAI,QAC5B,KAAK,GACN,EACO,CACR,CACA,KAAM,IAAI,OAAM,uBAAuB,GAAM,CAC9C,CAOA,YAAY,EAAiB,EAAsB,EAAQ,GAAgB,CAC1E,GAAM,CAAC,EAAU,GAAY,EAAQ,MAAM,UAAU,EAC/C,EAAQ,EAAW,EAAS,MAAM,SAAS,EAAI,CAAC,EAChD,EAAW,IAAiB,EAC/B,KAAK,KAAK,KAAK,KAAK,OAAO,GAC3B,KAAK,KAAK,KAAK,KAAK,OAAO,EAAE,GAGhC,MADA,MAAK,IAAI,EAAO,yBAAyB,eAAsB,WAAmB,CAAK,EACnF,IAAa,IAAM,IAAa,KAC/B,IAAa,EAChB,MAAK,IAAI,EAAO,WAAW,EACpB,IAIF,EAAM,MAAM,CAAC,EAAG,IACf,EAAgB,IAAI,CAAC,EACzB,KAAK,cAAc,EAAG,EAAc,CAAK,EACzC,KAAK,kBAAkB,EAA2B,EAAc,CAAK,EACtE,IAAI,CACR,CAcA,QAAS,EAAiB,EAAQ,GAAgB,CAEjD,GAAM,GAAQ,EAAQ,MAAM,UAAU,EACtC,YAAK,IAAI,EAAO,UAAW,CAAK,EACzB,EAAM,QAAQ,EAAE,MAAM,CAAC,EAAG,IAAM,KAAK,YAAY,EAAG,EAAG,CAAK,EAAG,IAAI,CAC3E,CAEA,SAAU,EAA8C,CACvD,GAAM,GAAO,KAAK,QAAQ,CAAK,EAC/B,MAAO,GAAa,EAAM,KAAK,SAAS,CACzC,CAEA,QAAS,EAA4E,CACpF,GAAM,GAAO,KAAK,QAAQ,CAAK,EAC/B,MAAO,MAAK,KAAK,EAAK,KAAK,GAAG,EAC/B,CAEA,QAAS,EAA8B,EAA6B,CACnE,KAAK,KAAK,EAAK,KAAK,GAAG,GAAK,CAC7B,CACD",
  "names": []
}
