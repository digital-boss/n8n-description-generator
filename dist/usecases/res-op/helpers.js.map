{
  "version": 3,
  "sources": ["../../../src/usecases/res-op/helpers.ts"],
  "sourcesContent": ["import fs from 'fs';\nimport { INodeProperties } from 'n8n-workflow';\nimport { getConstFromObject, getJsModule, warnMsg } from 'src/codegen';\n\n\nexport const writeDescriptionModules = (\n\toutDir: string,\n\tdescriptionsDict: Record<string, INodeProperties | INodeProperties[]>,\n) => {\n\tObject.keys(descriptionsDict).map(key => {\n\t\tconst props = descriptionsDict[key];\n\t\tfs.writeFileSync(`${outDir}/${key}.ts`, getJsModule(props, key), 'utf-8');\n\t});\n};\n\ninterface IRes {\n\toperations: Record<string, {\n\t\tnotImplemented?: boolean;\n\t}>;\n}\n\nexport const getTypesForResourceOperations = (resources: Record<string, IRes>): string => {\n\tconst resourcesCode = getConstFromObject('resourcesConst', Object.keys(resources));\n\tconst operationsCode = Object.entries(resources)\n\t\t.map(([name, res]) => {\n\t\t\tconst opNames = Object.entries(res.operations)\n\t\t\t\t.filter(([_, op]) => !op.notImplemented)\n\t\t\t\t.map(([name]) => name);\n\t\t\treturn getConstFromObject(`${name}Ops`, opNames);\n\t\t})\n\t\t.join('\\n\\n');\n\treturn [warnMsg, resourcesCode, operationsCode].join('\\n\\n') + '\\n';\n};\n"],
  "mappings": "0DAAA,kBAKO,GAAM,GAA0B,CACtC,EACA,IACI,CACJ,OAAO,KAAK,CAAgB,EAAE,IAAI,GAAO,CACxC,GAAM,GAAQ,EAAiB,GAC/B,EAAG,cAAc,GAAG,KAAU,OAAU,EAAY,EAAO,CAAG,EAAG,OAAO,CACzE,CAAC,CACF,EAQa,EAAgC,AAAC,GAA4C,CACzF,GAAM,GAAgB,EAAmB,iBAAkB,OAAO,KAAK,CAAS,CAAC,EAC3E,EAAiB,OAAO,QAAQ,CAAS,EAC7C,IAAI,CAAC,CAAC,EAAM,KAAS,CACrB,GAAM,GAAU,OAAO,QAAQ,EAAI,UAAU,EAC3C,OAAO,CAAC,CAAC,EAAG,KAAQ,CAAC,EAAG,cAAc,EACtC,IAAI,CAAC,CAAC,KAAU,CAAI,EACtB,MAAO,GAAmB,GAAG,OAAW,CAAO,CAChD,CAAC,EACA,KAAK;AAAA;AAAA,CAAM,EACb,MAAO,CAAC,EAAS,EAAe,CAAc,EAAE,KAAK;AAAA;AAAA,CAAM,EAAI;AAAA,CAChE",
  "names": []
}
